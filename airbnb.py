import undetected_chromedriver as webdriver
from TempMail import TempMail  # imports everything from TempMail library

import re
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.common.exceptions import NoSuchElementException
from selenium.common.exceptions import WebDriverException
from selenium.common.exceptions import TimeoutException
from selenium.webdriver.common.action_chains import ActionChains
import string
import random
import time
import requests
from apiclient import discovery
from apiclient import errors
from httplib2 import Http
from oauth2client import file, client, tools
import base64
from bs4 import BeautifulSoup
import re
import time
import dateutil.parser as parser
from datetime import datetime
import datetime
import csv
import email
import imaplib

user = ['i.nfokamalhmed@gmail.com', 'in.fokamalhmed@gmail.com', 'inf.okamalhmed@gmail.com', 'info.kamalhmed@gmail.com',
        'infok.amalhmed@gmail.com', 'infoka.malhmed@gmail.com', 'infokam.alhmed@gmail.com', 'infokama.lhmed@gmail.com',
        'infokamal.hmed@gmail.com', 'infokamalh.med@gmail.com', 'infokamalhm.ed@gmail.com', 'infokamalhme.d@gmail.com',
        'a.hmedinfozahid@gmail.com', 'ah.medinfozahid@gmail.com', 'ahm.edinfozahid@gmail.com',
        'ahme.dinfozahid@gmail.com', '.infozahid@gmail.com', 'i.nfozahid@gmail.com',
        'in.fozahid@gmail.com', 'inf.ozahid@gmail.com', 'info.zahid@gmail.com',
        'infoz.ahid@gmail.com', 'infoza.hid@gmail.com', 'infozah.id@gmail.com',
        'infozahi.d@gmail.com', 'i.nfotelcotestahymed@gmail.com', 'in.fotelcotestahymed@gmail.com',
        'inf.otelcotestahymed@gmail.com', 'info.telcotestahymed@gmail.com', 'infot.elcotestahymed@gmail.com',
        'infote.lcotestahymed@gmail.com', 'infotel.cotestahymed@gmail.com', 'infotelc.otestahymed@gmail.com',
        'infotelco.testahymed@gmail.com', 'infotelcot.estahymed@gmail.com', 'infotelcote.stahymed@gmail.com',
        'infotelcotes.tahymed@gmail.com', 'infotelcotest.ahymed@gmail.com', 'infotelcotesta.hymed@gmail.com',
        'infotelcotestah.ymed@gmail.com', 'infotelcotestahy.med@gmail.com', 'infotelcotestahym.ed@gmail.com',
        'infotelcotestahyme.d@gmail.com', 'i.nfokaiengeering@gmail.com', 'in.fokaiengeering@gmail.com',
        'inf.okaiengeering@gmail.com', 'info.kaiengeering@gmail.com', 'infok.aiengeering@gmail.com',
        'infoka.iengeering@gmail.com', 'infokai.engeering@gmail.com', 'infokaie.ngeering@gmail.com',
        'infokaien.geering@gmail.com', 'infokaieng.eering@gmail.com', 'infokaienge.ering@gmail.com',
        'infokaiengee.ring@gmail.com', 'infokaiengeer.ing@gmail.com', 'infokaiengeeri.ng@gmail.com',
        'infokaiengeerin.g@gmail.com', 'infokaiengeering.@gmail.com', 'infokaiengeeringa.hmed@gmail.com',
        'infokaiengeeringah.med@gmail.com', 'infokaiengeeringahm.ed@gmail.com', 'infokaiengeeringahme.d@gmail.com',
        'i.nforipha@gmail.com', 'in.foripha@gmail.com', 'inf.oripha@gmail.com',
        'info.ripha@gmail.com', 'infor.ipha@gmail.com', 'infori.pha@gmail.com',
        'inforip.ha@gmail.com', 'inforiph.a@gmail.com', 'inforipha.@gmail.com',
        'inforiphaa.hmed@gmail.com', 'inforiphaah.med@gmail.com', 'inforiphaahm.ed@gmail.com',
        'inforiphaahme.d@gmail.com']
gmail_pass = ['exbbdrfxhdedqngi', 'exbbdrfxhdedqngi', 'exbbdrfxhdedqngi', 'exbbdrfxhdedqngi', 'exbbdrfxhdedqngi',
              'exbbdrfxhdedqngi', 'exbbdrfxhdedqngi', 'exbbdrfxhdedqngi', 'exbbdrfxhdedqngi', 'exbbdrfxhdedqngi',
              'exbbdrfxhdedqngi', 'exbbdrfxhdedqngi', 'txplsxbiunzycygq', 'txplsxbiunzycygq', 'txplsxbiunzycygq',
              'txplsxbiunzycygq', 'txplsxbiunzycygq', 'txplsxbiunzycygq', 'txplsxbiunzycygq', 'txplsxbiunzycygq',
              'txplsxbiunzycygq', 'txplsxbiunzycygq', 'txplsxbiunzycygq', 'txplsxbiunzycygq', 'txplsxbiunzycygq',
              'pimhjjgolgnjenid', 'pimhjjgolgnjenid', 'pimhjjgolgnjenid', 'pimhjjgolgnjenid', 'pimhjjgolgnjenid',
              'pimhjjgolgnjenid', 'pimhjjgolgnjenid', 'pimhjjgolgnjenid', 'pimhjjgolgnjenid', 'pimhjjgolgnjenid',
              'pimhjjgolgnjenid', 'pimhjjgolgnjenid', 'pimhjjgolgnjenid', 'pimhjjgolgnjenid', 'pimhjjgolgnjenid',
              'pimhjjgolgnjenid', 'pimhjjgolgnjenid', 'pimhjjgolgnjenid', 'twanvmlygmgchnyx', 'twanvmlygmgchnyx',
              'twanvmlygmgchnyx', 'twanvmlygmgchnyx', 'twanvmlygmgchnyx', 'twanvmlygmgchnyx', 'twanvmlygmgchnyx',
              'twanvmlygmgchnyx', 'twanvmlygmgchnyx', 'twanvmlygmgchnyx', 'twanvmlygmgchnyx', 'twanvmlygmgchnyx',
              'twanvmlygmgchnyx', 'twanvmlygmgchnyx', 'twanvmlygmgchnyx', 'twanvmlygmgchnyx', 'twanvmlygmgchnyx',
              'twanvmlygmgchnyx', 'twanvmlygmgchnyx', 'twanvmlygmgchnyx', 'hbyswscrqygdwnoc', 'hbyswscrqygdwnoc',
              'hbyswscrqygdwnoc', 'hbyswscrqygdwnoc', 'hbyswscrqygdwnoc', 'hbyswscrqygdwnoc', 'hbyswscrqygdwnoc',
              'hbyswscrqygdwnoc', 'hbyswscrqygdwnoc', 'hbyswscrqygdwnoc', 'hbyswscrqygdwnoc', 'hbyswscrqygdwnoc',
              'hbyswscrqygdwnoc']

host = "imap.gmail.com"


# Creating a storage.JSON file with authentication details
def delete_cache(driver):
    driver.switch_to.window(driver.window_handles[-1])  # Switch window to the second tab
    driver.get('chrome://settings/clearBrowserData')  # Open your chrome settings.
    perform_actions(driver,
                    Keys.TAB * 2 + Keys.DOWN * 4 + Keys.TAB * 7 + Keys.ENTER)  # Tab to the time select and key down to say "All Time" then go to the Confirm button and press Enter


def perform_actions(driver, keys):
    actions = ActionChains(driver)
    actions.send_keys(keys)
    time.sleep(25)
    print('Performing Actions!')
    actions.perform()


def get_total_emails(mai):
    # Create server and login
    mail = imaplib.IMAP4_SSL("imap.gmail.com")
    mail.login(user[mai], gmail_pass[mai])

    # Using SELECT to choose the INBOX folder
    mail.select("INBOX")

    # Get the total number of emails in the INBOX folder
    _, response = mail.search(None, "ALL")
    return len(response[0].split())


def generate_random_string(length):
    characters = string.ascii_letters + string.digits
    return ''.join(random.choice(characters) for _ in range(length))


def generate_random_email():
    username_length = random.randint(5, 10)
    domain = "@gmail.com"
    username = generate_random_string(username_length)
    email = username + domain
    return email


def read_email_from_gmail(count=1, contain_body=True, mai=0):
    # Create server and login
    mail = imaplib.IMAP4_SSL(host)
    mail.login(user[mai], gmail_pass[mai])

    # Using SELECT to chose the e-mails.
    res, messages = mail.select('INBOX')

    # Caluclating the total number of sent Emails
    messages = int(messages[0])

    # Iterating over the sent emails
    for i in range(messages, messages - count, -1):
        # RFC822 protocol
        res, msg = mail.fetch(str(i), "(RFC822)")
        for response in msg:
            if isinstance(response, tuple):
                msg = email.message_from_bytes(response[1])

                # Store the senders email
                sender = msg["From"]

                # Store subject of the email
                subject = msg["Subject"]

                # Store Body
                body = ""
                temp = msg
                if temp.is_multipart():
                    for part in temp.walk():
                        content_type = part.get_content_type()
                        if "text/plain" in content_type or "text/html" in content_type:
                            charset = part.get_content_charset()
                            body = part.get_payload(decode=True).decode(charset)
                            break
                else:
                    body = temp.get_payload(decode=True).decode(temp.get_content_charset())

                # Print Sender, Subject, Body
                print("-" * 50)  # To divide the messages
                print("From    : ", sender)
                print("Subject : ", subject)
                if (contain_body):
                    print("Body    : ", body)
                    return body


import time
import random
import string
from user_agent import generate_user_agent, generate_navigator


def generate_unique_username(base_name="user"):
    # Using the current timestamp (to the microsecond) to ensure uniqueness
    timestamp = str(int(time.time() * 1000000))

    # Generate a random string of 5 characters for added uniqueness
    random_str = ''.join(random.choices(string.ascii_lowercase + string.digits, k=25))

    return f"{base_name}_{random_str}_{timestamp}"


def convertTuple(tup):
    strc = ''
    c = len(tup)

    for item in range(25):
        strc = strc + strc.join(tup[item])

    return strc


letters = string.ascii_lowercase
usernameStr = ['zahidkamal78978@gmail.com', 'zahid60@gmail.com', '78978@gmail.com']

Str = ''

from selenium.webdriver.chrome import service

mobile_emulation = {"deviceName": "iPhone SE"}
capa = DesiredCapabilities.CHROME
capa["pageLoadStrategy"] = "none"
count = 0
recount = 0
total = 0
t = 0
if __name__ == "__main__":
    while (1):

        numb = "0123456789"
        if (total >= 10):
            break

        url = 'https://www.airbnb.com/'

        fnumbers = ["1327530606","1327530607","1327530608","1327530609","1327530610","1327530611","1327530612","1327530613","1327530614","1327530615","1327530616","1327530617","1327530618","1327530619","1327530620","1327530621","1327530622","1327530623","1327530624","1327530625","1327530626","1327530627","1327530628","1327530629","1327530630","1327530631","1327530632","1327530633","1327530634","1327530635","1327530636","1327530637","1327530638","1327530639","1327530640","1327530641","1327530642","1327530643","1327530644","1327530645","1327530646","1327530647","1327530648","1327530649","1327530650","1327530651","1327530652","1327530653","1327530654","1327530655","1327530656","1327530657","1327530658","1327530659","1327530660","1327530661","1327530662","1327530663","1327530664","1327530665","1327530666","1327530667","1327530668","1327530669","1327530670","1327530671","1327530672","1327530673","1327530674","1327530675","1327530676","1327530677","1327530678","1327530679","1327530680","1327530681","1327530682","1327530683","1327530684","1327530685","1327530686","1327530687","1327530688","1327530689","1327530690","1327530691","1327530692","1327530693","1327530694","1327530695","1327530696","1327530697","1327530698","1327530699","1327530700","1327530701","1327530702","1327530703","1327530704","1327530705","1327530706","1327530707","1327530708","1327530709","1327530710","1327530711","1327530712","1327530713","1327530714","1327530715","1327530716","1327530717","1327530718","1327530719","1327530720","1327530721","1327530722","1327530723","1327530724","1327530725","1327530726","1327530727","1327530728","1327530729","1327530730","1327530731","1327530732","1327530733","1327530734","1327530735","1327530736","1327530737","1327530738","1327530739","1327530740","1327530741","1327530742","1327530743","1327530744","1327530745","1327530746","1327530747","1327530748","1327530749","1327530750","1327530751","1327530752","1327530753","1327530754","1327530755","1327530756","1327530757","1327530758","1327530759","1327530760","1327530761","1327530762","1327530763","1327530764","1327530765","1327530766","1327530767","1327530768","1327530769","1327530770","1327530771","1327530772","1327530773","1327530774","1327530775","1327530776","1327530777","1327530778","1327530779","1327530780","1327530781","1327530782","1327530783","1327530784","1327530785","1327530786","1327530787","1327530788","1327530789","1327530790","1327530791","1327530792","1327530793","1327530794","1327530795","1327530796","1327530797","1327530798","1327530799","1327530800","1327530801","1327530802","1327530803","1327530804","1327530805","1327530806","1327530807","1327530808","1327530809","1327530810","1327530811","1327530812","1327530813","1327530814","1327530815","1327530816","1327530817","1327530818","1327530819","1327530820","1327530821","1327530822","1327530823","1327530824","1327530825","1327530826","1327530827","1327530828","1327530829","1327530830","1327530831","1327530832","1327530833","1327530834","1327530835","1327530836","1327530837","1327530838","1327530839","1327530840","1327530841","1327530842","1327530843","1327530844","1327530845","1327530846","1327530847","1327530848","1327530849","1327530850","1327530851","1327530852","1327530853","1327530854","1327530855","1327530856","1327530857","1327530858","1327530859","1327530860","1327530861","1327530862","1327530863","1327530864","1327530865","1327530866","1327530867","1327530868","1327530869","1327530870","1327530871","1327530872","1327530873","1327530874","1327530875","1327530876","1327530877","1327530878","1327530879","1327530880","1327530881","1327530882","1327530883","1327530884","1327530885","1327530886","1327530887","1327530888","1327530889","1327530890","1327530891","1327530892","1327530893","1327530894","1327530895","1327530896","1327530897","1327530898","1327530899","1327530900","1327530901","1327530902","1327530903","1327530904","1327530905","1327530906","1327530907","1327530908","1327530909","1327530910","1327530911","1327530912","1327530913","1327530914","1327530915","1327530916","1327530917","1327530918","1327530919","1327530920","1327530921","1327530922","1327530923","1327530924","1327530925","1327530926","1327530927","1327530928","1327530929","1327530930","1327530931","1327530932","1327530933","1327530934","1327530935","1327530936","1327530937","1327530938","1327530939","1327530940","1327530941","1327530942","1327530943","1327530944","1327530945","1327530946","1327530947","1327530948","1327530949","1327530950","1327530951","1327530952","1327530953","1327530954","1327530955","1327530956","1327530957","1327530958","1327530959","1327530960","1327530961","1327530962","1327530963","1327530964","1327530965","1327530966","1327530967","1327530968","1327530969","1327530970","1327530971","1327530972","1327530973","1327530974","1327530975","1327530976","1327530977","1327530978","1327530979","1327530980","1327530981","1327530982","1327530983","1327530984","1327530985","1327530986","1327530987","1327530988","1327530989","1327530990","1327530991","1327530992","1327530993","1327530994","1327530995","1327530996","1327530997","1327530998","1327530999","1327532000","1327532001","1327532002","1327532003","1327532004","1327532005","1327532006","1327532007","1327532008","1327532009","1327532010","1327532011","1327532012","1327532013","1327532014","1327532015","1327532016","1327532017","1327532018","1327532019","1327532020","1327532021","1327532022","1327532023","1327532024","1327532025","1327532026","1327532027","1327532028","1327532029","1327532030","1327532031","1327532032","1327532033","1327532034","1327532035","1327532036","1327532037","1327532038","1327532039","1327532040","1327532041","1327532042","1327532043","1327532044","1327532045","1327532046","1327532047","1327532048","1327532049","1327532050","1327532051","1327532052","1327532053","1327532054","1327532055","1327532056","1327532057","1327532058","1327532059","1327532060","1327532061","1327532062","1327532063","1327532064","1327532065","1327532066","1327532067","1327532068","1327532069","1327532070","1327532071","1327532072","1327532073","1327532074","1327532075","1327532076","1327532077","1327532078","1327532079","1327532080","1327532081","1327532082","1327532083","1327532084","1327532085","1327532086","1327532087","1327532088","1327532089","1327532090","1327532091","1327532092","1327532093","1327532094","1327532095","1327532096","1327532097","1327532098","1327532099","1327532100","1327532101","1327532102","1327532103","1327532104","1327532105","1327532106","1327532107","1327532108","1327532109","1327532110","1327532111","1327532112","1327532113","1327532114","1327532115","1327532116","1327532117","1327532118","1327532119","1327532120","1327532121","1327532122","1327532123","1327532124","1327532125","1327532126","1327532127","1327532128","1327532129","1327532130","1327532131","1327532132","1327532133","1327532134","1327532135","1327532136","1327532137","1327532138","1327532139","1327532140","1327532141","1327532142","1327532143","1327532144","1327532145","1327532146","1327532147","1327532148","1327532149","1327532150","1327532151","1327532152","1327532153","1327532154","1327532155","1327532156","1327532157","1327532158","1327532159","1327532160","1327532161","1327532162","1327532163","1327532164","1327532165","1327532166","1327532167","1327532168","1327532169","1327532170","1327532171","1327532172","1327532173","1327532174","1327532175","1327532176","1327532177","1327532178","1327532179","1327532180","1327532181","1327532182","1327532183","1327532184","1327532185","1327532186","1327532187","1327532188","1327532189","1327532190","1327532191","1327532192","1327532193","1327532194","1327532195","1327532196","1327532197","1327532198","1327532199","1327532200","1327532201","1327532202","1327532203","1327532204","1327532205","1327532206","1327532207","1327532208","1327532209","1327532210","1327532211","1327532212","1327532213","1327532214","1327532215","1327532216","1327532217","1327532218","1327532219","1327532220","1327532221","1327532222","1327532223","1327532224","1327532225","1327532226","1327532227","1327532228","1327532229","1327532230","1327532231","1327532232","1327532233","1327532234","1327532235","1327532236","1327532237","1327532238","1327532239","1327532240","1327532241","1327532242","1327532243","1327532244","1327532245","1327532246","1327532247","1327532248","1327532249","1327532250","1327532251","1327532252","1327532253","1327532254","1327532255","1327532256","1327532257","1327532258","1327532259","1327532260","1327532261","1327532262","1327532263","1327532264","1327532265","1327532266","1327532267","1327532268","1327532269","1327532270","1327532271","1327532272","1327532273","1327532274","1327532275","1327532276","1327532277","1327532278","1327532279","1327532280","1327532281","1327532282","1327532283","1327532284","1327532285","1327532286","1327532287","1327532288","1327532289","1327532290","1327532291","1327532292","1327532293","1327532294","1327532295","1327532296","1327532297","1327532298","1327532299","1327532300","1327532301","1327532302","1327532303","1327532304","1327532305","1327532306","1327532307","1327532308","1327532309","1327532310","1327532311","1327532312","1327532313","1327532314","1327532315","1327532316","1327532317","1327532318","1327532319","1327532320","1327532321","1327532322","1327532323","1327532324","1327532325","1327532326","1327532327","1327532328","1327532329","1327532330","1327532331","1327532332","1327532333","1327532334","1327532335","1327532336","1327532337","1327532338","1327532339","1327532340","1327532341","1327532342","1327532343","1327532344","1327532345","1327532346","1327532347","1327532348","1327532349","1327532350","1327532351","1327532352","1327532353","1327532354","1327532355","1327532356","1327532357","1327532358","1327532359","1327532360","1327532361","1327532362","1327532363","1327532364","1327532365","1327532366","1327532367","1327532368","1327532369","1327532370","1327532371","1327532372","1327532373","1327532374","1327532375","1327532376","1327532377","1327532378","1327532379","1327532380","1327532381","1327532382","1327532383","1327532384","1327532385","1327532386","1327532387","1327532388","1327532389","1327532390","1327532391","1327532392","1327532393","1327532394","1327532395","1327532396","1327532397","1327532398","1327532399","1327532400","1327532401","1327532402","1327532403","1327532404","1327532405","1327532406","1327532407","1327532408","1327532409","1327532410","1327532411","1327532412","1327532413","1327532414","1327532415","1327532416","1327532417","1327532418","1327532419","1327532420","1327532421","1327532422","1327532423","1327532424","1327532425","1327532426","1327532427","1327532428","1327532429","1327532430","1327532431","1327532432","1327532433","1327532434","1327532435","1327532436","1327532437","1327532438","1327532439","1327532440","1327532441","1327532442","1327532443","1327532444","1327532445","1327532446","1327532447","1327532448","1327532449","1327532450","1327532451","1327532452","1327532453","1327532454","1327532455","1327532456","1327532457","1327532458","1327532459","1327532460","1327532461","1327532462","1327532463","1327532464","1327532465","1327532466","1327532467","1327532468","1327532469","1327532470","1327532471","1327532472","1327532473","1327532474","1327532475","1327532476","1327532477","1327532478","1327532479","1327532480","1327532481","1327532482","1327532483","1327532484","1327532485","1327532486","1327532487","1327532488","1327532489","1327532490","1327532491","1327532492","1327532493","1327532494","1327532495","1327532496","1327532497","1327532498","1327532499","1327532500","1327532501","1327532502","1327532503","1327532504","1327532505","1327532506","1327532507","1327532508","1327532509","1327532510","1327532511","1327532512","1327532513","1327532514","1327532515","1327532516","1327532517","1327532518","1327532519","1327532520","1327532521","1327532522","1327532523","1327532524","1327532525","1327532526","1327532527","1327532528","1327532529","1327532530","1327532531","1327532532","1327532533","1327532534","1327532535","1327532536","1327532537","1327532538","1327532539","1327532540","1327532541","1327532542","1327532543","1327532544","1327532545","1327532546","1327532547","1327532548","1327532549","1327532550","1327532551","1327532552","1327532553","1327532554","1327532555","1327532556","1327532557","1327532558","1327532559","1327532560","1327532561","1327532562","1327532563","1327532564","1327532565","1327532566","1327532567","1327532568","1327532569","1327532570","1327532571","1327532572","1327532573","1327532574","1327532575","1327532576","1327532577","1327532578","1327532579","1327532580","1327532581","1327532582","1327532583","1327532584","1327532585","1327532586","1327532587","1327532588","1327532589","1327532590","1327532591","1327532592","1327532593","1327532594","1327532595","1327532596","1327532597","1327532598","1327532599","1327532600","1327532601","1327532602","1327532603","1327532604","1327532605","1327532606","1327532607","1327532608","1327532609","1327532610","1327532611","1327532612","1327532613","1327532614","1327532615","1327532616","1327532617","1327532618","1327532619","1327532620","1327532621","1327532622"]
        dk=["1327532624","1327532625","1327532626","1327532627","1327532628","1327532629","1327532630","1327532631","1327532632","1327532633","1327532634","1327532635","1327532636","1327532637","1327532638","1327532639","1327532640","1327532641","1327532642","1327532643","1327532644","1327532645","1327532646","1327532647","1327532648","1327532649","1327532650","1327532651","1327532652","1327532653","1327532654","1327532655","1327532656","1327532657","1327532658","1327532659","1327532660","1327532661","1327532662","1327532663","1327532664","1327532665","1327532666","1327532667","1327532668","1327532669","1327532670","1327532671","1327532672","1327532673","1327532674","1327532675","1327532676","1327532677","1327532678","1327532679","1327532680","1327532681","1327532682","1327532683","1327532684","1327532685","1327532686","1327532687","1327532688","1327532689","1327532690","1327532691","1327532692","1327532693","1327532694","1327532695","1327532696","1327532697","1327532698","1327532699","1327532700","1327532701","1327532702","1327532703","1327532704","1327532705","1327532706","1327532707","1327532708","1327532709","1327532710","1327532711","1327532712","1327532713","1327532714","1327532715","1327532716","1327532717","1327532718","1327532719","1327532720","1327532721","1327532722","1327532723","1327532724","1327532725","1327532726","1327532727","1327532728","1327532729","1327532730","1327532731","1327532732","1327532733","1327532734","1327532735","1327532736","1327532737","1327532738","1327532739","1327532740","1327532741","1327532742","1327532743","1327532744","1327532745","1327532746","1327532747","1327532748","1327532749","1327532750","1327532751","1327532752","1327532753","1327532754","1327532755","1327532756","1327532757","1327532758","1327532759","1327532760","1327532761","1327532762","1327532763","1327532764","1327532765","1327532766","1327532767","1327532768","1327532769","1327532770","1327532771","1327532772","1327532773","1327532774","1327532775","1327532776","1327532777","1327532778","1327532779","1327532780","1327532781","1327532782","1327532783","1327532784","1327532785","1327532786","1327532787","1327532788","1327532789","1327532790","1327532791","1327532792","1327532793","1327532794","1327532795","1327532796","1327532797","1327532798","1327532799","1327532800","1327532801","1327532802","1327532803","1327532804","1327532805","1327532806","1327532807","1327532808","1327532809","1327532810","1327532811","1327532812","1327532813","1327532814","1327532815","1327532816","1327532817","1327532818","1327532819","1327532820","1327532821","1327532822","1327532823","1327532824","1327532825","1327532826","1327532827","1327532828","1327532829","1327532830","1327532831","1327532832","1327532833","1327532834","1327532835","1327532836","1327532837","1327532838","1327532839","1327532840","1327532841","1327532842","1327532843","1327532844","1327532845","1327532846","1327532847","1327532848","1327532849","1327532850","1327532851","1327532852","1327532853","1327532854","1327532855","1327532856","1327532857","1327532858","1327532859","1327532860","1327532861","1327532862","1327532863","1327532864","1327532865","1327532866","1327532867","1327532868","1327532869","1327532870","1327532871","1327532872","1327532873","1327532874","1327532875","1327532876","1327532877","1327532878","1327532879","1327532880","1327532881","1327532882","1327532883","1327532884","1327532885","1327532886","1327532887","1327532888","1327532889","1327532890","1327532891","1327532892","1327532893","1327532894","1327532895","1327532896","1327532897","1327532898","1327532899","1327532900","1327532901","1327532902","1327532903","1327532904","1327532905","1327532906","1327532907","1327532908","1327532909","1327532910","1327532911","1327532912","1327532913","1327532914","1327532915","1327532916","1327532917","1327532918","1327532919","1327532920","1327532921","1327532922","1327532923","1327532924","1327532925","1327532926","1327532927","1327532928","1327532929","1327532930","1327532931","1327532932","1327532933","1327532934","1327532935","1327532936","1327532937","1327532938","1327532939","1327532940","1327532941","1327532942","1327532943","1327532944","1327532945","1327532946","1327532947","1327532948","1327532949","1327532950","1327532951","1327532952","1327532953","1327532954","1327532955","1327532956","1327532957","1327532958","1327532959","1327532960","1327532961","1327532962","1327532963","1327532964","1327532965","1327532966","1327532967","1327532968","1327532969","1327532970","1327532971","1327532972","1327532973","1327532974","1327532975","1327532976","1327532977","1327532978","1327532979","1327532980","1327532981","1327532982","1327532983","1327532984","1327532985","1327532986","1327532987","1327532988","1327532989","1327532990","1327532991","1327532992","1327532993","1327532994","1327532995","1327532996","1327532997","1327532998","1327532999","1327538000","1327538001","1327538002","1327538003","1327538004","1327538005","1327538006","1327538007","1327538008","1327538009","1327538010","1327538011","1327538012","1327538013","1327538014","1327538015","1327538016","1327538017","1327538018","1327538019","1327538020","1327538021","1327538022","1327538023","1327538024","1327538025","1327538026","1327538027","1327538028","1327538029","1327538030","1327538031","1327538032","1327538033","1327538034","1327538035","1327538036","1327538037","1327538038","1327538039","1327538040","1327538041","1327538042","1327538043","1327538044","1327538045","1327538046","1327538047","1327538048","1327538049","1327538050","1327538051","1327538052","1327538053","1327538054","1327538055","1327538056","1327538057","1327538058","1327538059","1327538060","1327538061","1327538062","1327538063","1327538064","1327538065","1327538066","1327538067","1327538068","1327538069","1327538070","1327538071","1327538072","1327538073","1327538074","1327538075","1327538076","1327538077","1327538078","1327538079","1327538080","1327538081","1327538082","1327538083","1327538084","1327538085","1327538086","1327538087","1327538088","1327538089","1327538090","1327538091","1327538092","1327538093","1327538094","1327538095","1327538096","1327538097","1327538098","1327538099","1327538100","1327538101","1327538102","1327538103","1327538104","1327538105","1327538106","1327538107","1327538108","1327538109","1327538110","1327538111","1327538112","1327538113","1327538114","1327538115","1327538116","1327538117","1327538118","1327538119","1327538120","1327538121","1327538122","1327538123","1327538124","1327538125","1327538126","1327538127","1327538128","1327538129","1327538130","1327538131","1327538132","1327538133","1327538134","1327538135","1327538136","1327538137","1327538138","1327538139","1327538140","1327538141","1327538142","1327538143","1327538144","1327538145","1327538146","1327538147","1327538148","1327538149","1327538150","1327538151","1327538152","1327538153","1327538154","1327538155","1327538156","1327538157","1327538158","1327538159","1327538160","1327538161","1327538162","1327538163","1327538164","1327538165","1327538166","1327538167","1327538168","1327538169","1327538170","1327538171","1327538172","1327538173","1327538174","1327538175","1327538176","1327538177","1327538178","1327538179","1327538180","1327538181","1327538182","1327538183","1327538184","1327538185","1327538186","1327538187","1327538188","1327538189","1327538190","1327538191","1327538192","1327538193","1327538194","1327538195","1327538196","1327538197","1327538198","1327538199","1327538200","1327538201","1327538202","1327538203","1327538204","1327538205","1327538206","1327538207","1327538208","1327538209","1327538210","1327538211","1327538212","1327538213","1327538214","1327538215","1327538216","1327538217","1327538218","1327538219","1327538220","1327538221","1327538222","1327538223","1327538224","1327538225","1327538226","1327538227","1327538228","1327538229","1327538230","1327538231","1327538232","1327538233","1327538234","1327538235","1327538236","1327538237","1327538238","1327538239","1327538240","1327538241","1327538242","1327538243","1327538244","1327538245","1327538246","1327538247","1327538248","1327538249","1327538250","1327538251","1327538252","1327538253","1327538254","1327538255","1327538256","1327538257","1327538258","1327538259","1327538260","1327538261","1327538262","1327538263","1327538264","1327538265","1327538266","1327538267","1327538268","1327538269","1327538270","1327538271","1327538272","1327538273","1327538274","1327538275","1327538276","1327538277","1327538278","1327538279","1327538280","1327538281","1327538282","1327538283","1327538284","1327538285","1327538286","1327538287","1327538288","1327538289","1327538290","1327538291","1327538292","1327538293","1327538294","1327538295","1327538296","1327538297","1327538298","1327538299","1327538300","1327538301","1327538302","1327538303","1327538304","1327538305","1327538306","1327538307","1327538308","1327538309","1327538310","1327538311","1327538312","1327538313","1327538314","1327538315","1327538316","1327538317","1327538318","1327538319","1327538320","1327538321","1327538322","1327538323","1327538324","1327538325","1327538326","1327538327","1327538328","1327538329","1327538330","1327538331","1327538332","1327538333","1327538334","1327538335","1327538336","1327538337","1327538338","1327538339","1327538340","1327538341","1327538342","1327538343","1327538344","1327538345","1327538346","1327538347","1327538348","1327538349","1327538350","1327538351","1327538352","1327538353","1327538354","1327538355","1327538356","1327538357","1327538358","1327538359","1327538360","1327538361","1327538362","1327538363","1327538364","1327538365","1327538366","1327538367","1327538368","1327538369","1327538370","1327538371","1327538372","1327538373","1327538374","1327538375","1327538376","1327538377","1327538378","1327538379","1327538380","1327538381","1327538382","1327538383","1327538384","1327538385","1327538386","1327538387","1327538388","1327538389","1327538390","1327538391","1327538392","1327538393","1327538394","1327538395","1327538396","1327538397","1327538398","1327538399","1327538400","1327538401","1327538402","1327538403","1327538404","1327538405","1327538406","1327538407","1327538408","1327538409","1327538410","1327538411","1327538412","1327538413","1327538414","1327538415","1327538416","1327538417","1327538418","1327538419","1327538420","1327538421","1327538422","1327538423","1327538424","1327538425","1327538426","1327538427","1327538428","1327538429","1327538430","1327538431","1327538432","1327538433","1327538434","1327538435","1327538436","1327538437","1327538438","1327538439","1327538440","1327538441","1327538442","1327538443","1327538444","1327538445","1327538446","1327538447","1327538448","1327538449","1327538450","1327538451","1327538452","1327538453","1327538454","1327538455","1327538456","1327538457","1327538458","1327538459","1327538460","1327538461","1327538462","1327538463","1327538464","1327538465","1327538466","1327538467","1327538468","1327538469","1327538470","1327538471","1327538472","1327538473","1327538474","1327538475","1327538476","1327538477","1327538478","1327538479","1327538480","1327538481","1327538482","1327538483","1327538484","1327538485","1327538486","1327538487","1327538488","1327538489","1327538490","1327538491","1327538492","1327538493","1327538494","1327538495","1327538496","1327538497","1327538498","1327538499","1327538500","1327538501","1327538502","1327538503","1327538504","1327538505","1327538506","1327538507","1327538508","1327538509","1327538510","1327538511","1327538512","1327538513","1327538514","1327538515","1327538516","1327538517","1327538518","1327538519","1327538520","1327538521","1327538522","1327538523","1327538524","1327538525","1327538526","1327538527","1327538528","1327538529","1327538530","1327538531","1327538532","1327538533","1327538534","1327538535","1327538536","1327538537","1327538538","1327538539","1327538540","1327538541","1327538542","1327538543","1327538544","1327538545","1327538546","1327538547","1327538548","1327538549","1327538550","1327538551","1327538552","1327538553","1327538554","1327538555","1327538556","1327538557","1327538558","1327538559","1327538560","1327538561","1327538562","1327538563","1327538564","1327538565","1327538566","1327538567","1327538568","1327538569","1327538570","1327538571","1327538572","1327538573","1327538574","1327538575","1327538576","1327538577","1327538578","1327538579","1327538580","1327538581","1327538582","1327538583","1327538584","1327538585","1327538586","1327538587","1327538588","1327538589","1327538590","1327538591","1327538592","1327538593","1327538594","1327538595","1327538596","1327538597","1327538598"]
        done=["1327530605","1327538604","1327538603","1327538602","1327538601","1327538599"]
        ban=["1327538600"]
        fnumbers = fnumbers[::-1]
        # random.shuffle(fnumbers)
        mailcount = 0

        numbers = []
        mai = random.randint(0, len(user) - 1)

        while (1):
            if (total >= 10):
                break
            try:
                options = webdriver.ChromeOptions()
                # options.add_argument(r'--profile-directory=C:\\Users\\Ahmad\\AppData\\Local\\Google\\Chrome\\User Data\\Profile 3')
                ag = str(generate_user_agent('win'))
                print(ag)

                options.add_argument("--disable-renderer-backgrounding")
                options.add_argument("--disable-backgrounding-occluded-windows")
                # profile_directory = 'C:\\Users\\Ahmad\\AppData\\Local\\Google\\Chrome\\User Data\\Profile 4'
                # options.add_argument(f'user-data-dir={profile_directory}')
                options.add_argument(
                    '--load-extension=D:\\autologinbot-master\\surf,D:\\autologinbot-master\\chromium_automation')
                # options.add_argument(
                #    '--user-agent='+ag)
                browser = webdriver.Chrome(options=options)

                # profile_directory = 'C:\\Users\\Ahmad\\AppData\\Local\\Google\\Chrome\\User Data\\Profile 4'
                # options.add_argument(f'user-data-dir={profile_directory}')
                # options.add_argument('--load-extension=D:\\autologinbot-master\\surf')
                browser.get(
                    "chrome-extension://aghniddgckgpmiiikjjfkgajlhpfladl/index.html")

                # usernap = WebDriverWait(browser, 120).until(
                #   EC.presence_of_element_located((By.XPATH,
                #                                   '/html/body/div/div/div[1]/div/div[1]/a[2]'))).click()
                # time.sleep(1)
                random_number = random.randint(1, 26)
                print(random_number)
                p = '/html/body/div/div/div[2]/div[1]/div/div[2]/div/div/div[2]/div[' + str(
                    random_number) + ']'
                print(p)

                usernap = WebDriverWait(browser, 40).until(
                    EC.presence_of_element_located((By.XPATH,
                                                    p))).click()
                time.sleep(3)

                # = webdriver.Chrome(options=options)
                i = random.randint(2, 57)
                inb = 'infozahid@gmail.com'
                time.sleep(10)

                time.sleep(3)

                while (1):

                    try:

                        print('h')
                        browser.delete_all_cookies()

                        browser.get(
                            'https://www.google.com/search?q=airbnb+l%3Bogin&client=opera-gx&hs=Y4L&sca_esv=556828901&sxsrf=AB5stBin_C6Ezilzi60a-P6ln7xBe3wMkw%3A1692038339436&ei=w3TaZJSiGt3KkdUP6tSriAw&ved=0ahUKEwjUj6yB5tyAAxVdZaQEHWrqCsEQ4dUDCA8&uact=5&oq=airbnb+l%3Bogin&gs_lp=Egxnd3Mtd2l6LXNlcnAiDWFpcmJuYiBsO29naW4yDRAAGIAEGLEDGIMBGAoyBxAAGIAEGAoyBxAAGIAEGAoyBxAAGIAEGAoyBxAAGIAEGAoyBxAAGIAEGAoyBxAAGIAEGAoyBxAAGIAEGAoyBxAAGIAEGAoyBxAAGIAEGApIvxZQAFiHE3AAeAGQAQKYAdkFoAGhIaoBCzItOC4zLjAuMS4xuAEDyAEA-AEBwgIHECMYigUYJ8ICCxAAGIoFGLEDGJECwgIWEC4YigUYsQMYgwEYyQMYxwEY0QMYQ8ICCBAAGIoFGJIDwgINEC4YigUYxwEY0QMYQ8ICBxAAGIoFGEPCAhEQLhiABBixAxiDARjHARjRA8ICCxAuGIAEGLEDGIMBwgIOEAAYgAQYsQMYgwEYkgPCAg0QABiKBRixAxiDARhDwgIQEAAYgAQYFBiHAhixAxiDAcICCxAAGIAEGLEDGIMBwgIIEAAYgAQYsQPCAgUQABiABOIDBBgAIEGIBgE&sclient=gws-wiz-serp')
                        time.sleep(2)
                        browser.get(url)
                        inbox = TempMail.generateInbox()
                        print("Email Address: " + inbox.address)
                        number = '1898879786'
                        num_emails = 1
                        email = ''

                        unique_emails = set()
                        while len(unique_emails) < num_emails:
                            emails = generate_random_email()
                            unique_emails.add(emails)

                        for emails in unique_emails:
                            email = emails
                            print(email)

                        while (1):
                            usernap = WebDriverWait(browser, 25).until(
                                EC.presence_of_element_located((By.XPATH,
                                                                '/html/body/div[5]/div/div/div[1]/div/div[2]/div[1]/div/div/div/header/div/div[3]/nav/div[2]'))).click()
                            time.sleep(1)

                            usernap = WebDriverWait(browser, 155).until(
                                EC.presence_of_element_located((By.XPATH,
                                                                '/html[1]/body[1]/div[5]/div[1]/div[1]/div[1]/div[1]/div[2]/div[1]/div[1]/div[1]/div[1]/header[1]/div[1]/div[3]/nav[1]/div[2]/div[1]/div[1]/div[1]/a[1]/div[1]'))).click()
                            time.sleep(2)

                            for x in range(5):
                                try:
                                    usernap = WebDriverWait(browser, 250).until(
                                        EC.presence_of_element_located(
                                            (By.CSS_SELECTOR, 'button[data-testid="social-auth-button-email"]')))
                                    usernap.click()
                                    break
                                except:
                                    pass

                            usernap = WebDriverWait(browser, 25).until(
                                EC.presence_of_element_located((By.CSS_SELECTOR,
                                                                '#email-login-email')))
                            text_to_type = email

                            # Send the keys one by one with a delay to simulate human typing
                            for char in text_to_type:
                                usernap.send_keys(char)
                                time.sleep(0.1)

                            usernap = WebDriverWait(browser, 60).until(
                                EC.presence_of_element_located((By.CSS_SELECTOR, 'button[data-testid="signup-login-submit-btn"]')))
                            usernap.click()
                            time.sleep(0.5)
                            usernap = WebDriverWait(browser, 25).until(
                                EC.presence_of_element_located((By.CSS_SELECTOR,
                                                                '#email-signup-user\[first_name\]')))
                            usernap.send_keys('')
                            usernap = WebDriverWait(browser, 25).until(
                                EC.presence_of_element_located((By.CSS_SELECTOR,
                                                                '#email-signup-user\[last_name\]')))
                            usernap.send_keys('zahid')
                            time.sleep(0.5)
                            usernap = WebDriverWait(browser, 25).until(
                                EC.presence_of_element_located((By.CSS_SELECTOR,
                                                                '#email-signup-date')))
                            text_to_type = '22081999'

                            # Send the keys one by one with a delay to simulate human typing
                            for char in text_to_type:
                                usernap.send_keys(char)
                                time.sleep(0.1)
                            usernap = WebDriverWait(browser, 25).until(
                                EC.presence_of_element_located((By.CSS_SELECTOR,
                                                                '#email-signup-')))
                            text_to_type = 'jamal@123J'

                            # Send the keys one by one with a delay to simulate human typing
                            for char in text_to_type:
                                usernap.send_keys(char)
                                time.sleep(0.1)
                            usernap = WebDriverWait(browser, 25).until(
                                EC.presence_of_element_located((By.CSS_SELECTOR, 'button[data-testid="signup-login-submit-btn"]')))
                            usernap.click()
                            time.sleep(5)
                            usernap = WebDriverWait(browser, 25).until(
                                EC.presence_of_element_located((By.CSS_SELECTOR, 'button[data-testid="cc-accept"]')))
                            usernap.click()
                            usernap = WebDriverWait(browser, 25).until(
                                EC.presence_of_element_located((By.CSS_SELECTOR, 'button[data-testid="activation-welcome-btn"]')))
                            usernap.click()
                            usernap = WebDriverWait(browser, 25).until(
                                EC.presence_of_element_located((By.CSS_SELECTOR,
                                                                '#country > option:nth-child(18)')))
                            usernap.click()
                            time.sleep(0.5)
                            usernap = WebDriverWait(browser, 25).until(
                                EC.presence_of_element_located((By.ID,
                                                                'phoneInputVerification')))
                            text_to_type = fnumbers[recount]

                            # Send the keys one by one with a delay to simulate human typing
                            for char in text_to_type:
                                usernap.send_keys(char)
                                time.sleep(0.1)
                            time.sleep(0.5)
                            usernap = WebDriverWait(browser, 25).until(
                                EC.presence_of_element_located((By.ID,
                                                                'activation_checkbox_sms_send_app')))
                            usernap.click()
                            time.sleep(0.5)
                            usernap = WebDriverWait(browser, 25).until(
                                EC.presence_of_element_located((By.CSS_SELECTOR,
                                                                '[data-testid="phone-verification-submit-btn"]'))).click()

                            time.sleep(10)
                            usernap = WebDriverWait(browser, 50).until(
                                EC.presence_of_element_located((By.ID,
                                                                'verification-code-input')))

                            headers = {
                                "Host": "smart.telcotest.net",
                                "Cookie": "CELLSID=491dfcb14a9b55b4a3bd43bc7941f534; TZ=-300,0; TZM=Asia/Karachi",
                                "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.5735.199 Safari/537.36",
                                "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
                                "Referer": "https://smart.telcotest.net/sms",
                                "Accept-Encoding": "gzip, deflate",
                                "Accept-Language": "en-GB,en-US;q=0.9,en;q=0.8",
                                "Connection": "close"
                            }

                            number_as_string = str(fnumbers[recount])

                            # Remove the first digit by slicing the string
                            #new_number_as_string = number_as_string[1:]

                            phone_number = '880' + number_as_string  # Replace this with the desired phone number

                            urls = f"https://smart.telcotest.net/sms?sms_to=%2B{phone_number}&dup=2&sms_time_start=&sms_time_end=&count=1000&order=id%3Adesc"
                            print(urls)

                            response = requests.get(urls, headers=headers)
                            soup = BeautifulSoup(response.content, 'html.parser')
                            table = soup.find('table', class_='table table-hover')
                            digit_code = ''

                            if table:
                                rows = table.find_all('tr')
                                if len(rows) > 1:  # Check if there's at least one data row
                                    first_data_row = rows[1]  # Skip the header row
                                    columns = first_data_row.find_all(['td', 'th'])
                                    row_data = [column.text.strip() for column in columns]
                                    print(row_data)
                                    print(row_data[7])
                                    pattern = r'\d+'  # Regular expression pattern to match one or more digits

                                    matches = re.findall(pattern, row_data[7])
                                    if matches:
                                        digit_code = matches[0]
                                        print("Extracted Digit Code:", digit_code)
                                    else:
                                        print("No digit code found in the line.")
                                else:
                                    print("No data rows found in the table.")
                            else:
                                print("Could not find the specified table.")



                            usernap = WebDriverWait(browser, 25).until(
                                EC.presence_of_element_located((By.ID,
                                                                'verification-code-input')))
                            usernap.send_keys(digit_code)
                            time.sleep(0.5)
                            with open(f"input_value.txt", "a") as text_file:
                                text_file.write(fnumbers[recount] + "\n")
                            fnumbers.pop(recount)
                            count += 1
                            print(count)
                            if (recount < (len(fnumbers) - 1)):
                                recount = recount + 1
                            else:
                                recount = 0
                            time.sleep(10)
                            print(a)



















                    except  Exception as e:



                        browser.delete_all_cookies()
                        browser.get(
                            "chrome-extension://aghniddgckgpmiiikjjfkgajlhpfladl/index.html")

                        # usernap = WebDriverWait(browser, 120).until(
                        #   EC.presence_of_element_located((By.XPATH,
                        #                                   '/html/body/div/div/div[1]/div/div[1]/a[2]'))).click()
                        # time.sleep(1)
                        random_number = random.randint(1, 142)
                        print(random_number)
                        p = '#root > div > div.Zt5Rf > div:nth-child(1) > div > div.JzV3Q._1GKSy.m0fte > div > div > div:nth-child(3) > div:nth-child(' + str(
                            random_number) + ')'
                        print(p)

                        usernap = WebDriverWait(browser, 20).until(
                            EC.presence_of_element_located((By.CSS_SELECTOR,
                                                            p))).click()
                        time.sleep(6)


            except:



                browser.quit()
                print('biggest exception')
